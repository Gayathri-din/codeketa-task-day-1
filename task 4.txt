
/*1.how to compare JSON have yhe same properties without order?

let obj1 = { name: "person 1", age: 5 };
let obj2 = { age: 5, name: "Person 1" };

// Convert objects to JSON strings
let jsonString1 = JSON.stringify(obj1);
let jsonString2 = JSON.stringify(obj2);

// Sort the properties of JSON strings
let sortedJsonString1 = jsonString1.split('').sort().join('');
let sortedJsonString2 = jsonString2.split('').sort().join('');

// Compare the sorted JSON strings
if (sortedJsonString1 === sortedJsonString2) {
    console.log("The JSON objects are equal.");
} else {
    console.log("The JSON objects are not equal.");
}



//2.Use the rest countries API and display all the country flags in the councle /


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Country Flags</title>
  <style>
    .flag {
      width: 50px;
      height: auto;
      margin: 5px;
    }
  </style>
</head>
<body>
  <div id="flags-container"></div>

  <script>
    // Function to fetch data from the REST Countries API
    async function fetchCountries() {
      try {
        const response = await fetch('https://restcountries.com/v3.1/all');
        const data = await response.json();
        return data;
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    }

    // Function to display country flags
    async function displayCountryFlags() {
      const countries = await fetchCountries();
      const flagsContainer = document.getElementById('flags-container');

      // Iterate through each country and create an img element for its flag
      countries.forEach(country => {
        const flagUrl = country.flags.svg;
        const img = document.createElement('img');
        img.src = flagUrl;
        img.alt = `${country.name.common} Flag`;
        img.className = 'flag';
        flagsContainer.appendChild(img);
      });
    }

    // Call the function to display country flags when the page loads
    window.onload = displayCountryFlags;
  </script>
</body>
</html>




//3./use the same rest countries and print all countries name,regions,sub-region and populations.all


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Country Information</title>
  <style>
    .country-info {
      margin-bottom: 20px;
    }
  </style>
</head>
<body>
  <div id="countries-container"></div>

  <script>
    // Function to fetch data from the REST Countries API
    async function fetchCountries() {
      try {
        const response = await fetch('https://restcountries.com/v3.1/all');
        const data = await response.json();
        return data;
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    }

    // Function to display country information
    async function displayCountryInfo() {
      const countries = await fetchCountries();
      const countriesContainer = document.getElementById('countries-container');

      // Iterate through each country and create a div for its information
      countries.forEach(country => {
        const countryInfoDiv = document.createElement('div');
        countryInfoDiv.className = 'country-info';

        // Add country name
        const name = document.createElement('p');
        name.textContent = `Name: ${country.name.common}`;
        countryInfoDiv.appendChild(name);

        // Add region
        const region = document.createElement('p');
        region.textContent = `Region: ${country.region}`;
        countryInfoDiv.appendChild(region);

        // Add sub-region
        const subRegion = document.createElement('p');
        subRegion.textContent = `Sub-Region: ${country.subregion}`;
        countryInfoDiv.appendChild(subRegion);

        // Add population
        const population = document.createElement('p');
        population.textContent = `Population: ${country.population}`;
        countryInfoDiv.appendChild(population);

        // Add flag
        const flagImg = document.createElement('img');
        flagImg.src = country.flags.svg;
        flagImg.alt = `${country.name.common} Flag`;
        flagImg.className = 'flag';
        countryInfoDiv.appendChild(flagImg);

        countriesContainer.appendChild(countryInfoDiv);
      });
    }

    // Call the function to display country information when the page loads
    window.onload = displayCountryInfo;
  </script>
</body>
</html>
